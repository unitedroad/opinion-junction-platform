(function(){var BinaryFile=function(strData,iDataOffset,iDataLength){var data=strData;var dataOffset=iDataOffset||0;var dataLength=0;this.getRawData=function(){return data};if(typeof strData=="string"){dataLength=iDataLength||data.length;this.getByteAt=function(iOffset){return data.charCodeAt(iOffset+dataOffset)&255};this.getBytesAt=function(iOffset,iLength){var aBytes=[];for(var i=0;i<iLength;i++){aBytes[i]=data.charCodeAt(iOffset+i+dataOffset)&255}return aBytes}}else if(typeof strData=="unknown"){dataLength=iDataLength||IEBinary_getLength(data);this.getByteAt=function(iOffset){return IEBinary_getByteAt(data,iOffset+dataOffset)};this.getBytesAt=function(iOffset,iLength){return new VBArray(IEBinary_getBytesAt(data,iOffset+dataOffset,iLength)).toArray()}}this.getLength=function(){return dataLength};this.getSByteAt=function(iOffset){var iByte=this.getByteAt(iOffset);if(iByte>127)return iByte-256;else return iByte};this.getShortAt=function(iOffset,bBigEndian){var iShort=bBigEndian?(this.getByteAt(iOffset)<<8)+this.getByteAt(iOffset+1):(this.getByteAt(iOffset+1)<<8)+this.getByteAt(iOffset);if(iShort<0)iShort+=65536;return iShort};this.getSShortAt=function(iOffset,bBigEndian){var iUShort=this.getShortAt(iOffset,bBigEndian);if(iUShort>32767)return iUShort-65536;else return iUShort};this.getLongAt=function(iOffset,bBigEndian){var iByte1=this.getByteAt(iOffset),iByte2=this.getByteAt(iOffset+1),iByte3=this.getByteAt(iOffset+2),iByte4=this.getByteAt(iOffset+3);var iLong=bBigEndian?(((iByte1<<8)+iByte2<<8)+iByte3<<8)+iByte4:(((iByte4<<8)+iByte3<<8)+iByte2<<8)+iByte1;if(iLong<0)iLong+=4294967296;return iLong};this.getSLongAt=function(iOffset,bBigEndian){var iULong=this.getLongAt(iOffset,bBigEndian);if(iULong>2147483647)return iULong-4294967296;else return iULong};this.getStringAt=function(iOffset,iLength){var aStr=[];var aBytes=this.getBytesAt(iOffset,iLength);for(var j=0;j<iLength;j++){aStr[j]=String.fromCharCode(aBytes[j])}return aStr.join("")};this.getCharAt=function(iOffset){return String.fromCharCode(this.getByteAt(iOffset))};this.toBase64=function(){return window.btoa(data)};this.fromBase64=function(strBase64){data=window.atob(strBase64)}};var EXIF=function(){var debug=false;var ExifTags={36864:"ExifVersion",40960:"FlashpixVersion",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelYDimension",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37500:"MakerNote",37510:"UserComment",40964:"RelatedSoundFile",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37520:"SubsecTime",37521:"SubsecTimeOriginal",37522:"SubsecTimeDigitized",33434:"ExposureTime",33437:"FNumber",34850:"ExposureProgram",34852:"SpectralSensitivity",34855:"ISOSpeedRatings",34856:"OECF",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureBias",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37396:"SubjectArea",37386:"FocalLength",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41492:"SubjectLocation",41493:"ExposureIndex",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRation",41989:"FocalLengthIn35mmFilm",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",40965:"InteroperabilityIFDPointer",42016:"ImageUniqueID"};var TiffTags={256:"ImageWidth",257:"ImageHeight",34665:"ExifIFDPointer",34853:"GPSInfoIFDPointer",40965:"InteroperabilityIFDPointer",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",274:"Orientation",277:"SamplesPerPixel",284:"PlanarConfiguration",530:"YCbCrSubSampling",531:"YCbCrPositioning",282:"XResolution",283:"YResolution",296:"ResolutionUnit",273:"StripOffsets",278:"RowsPerStrip",279:"StripByteCounts",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",301:"TransferFunction",318:"WhitePoint",319:"PrimaryChromaticities",529:"YCbCrCoefficients",532:"ReferenceBlackWhite",306:"DateTime",270:"ImageDescription",271:"Make",272:"Model",305:"Software",315:"Artist",33432:"Copyright"};var GPSTags={0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential"};var StringValues={ExposureProgram:{0:"Not defined",1:"Manual",2:"Normal program",3:"Aperture priority",4:"Shutter priority",5:"Creative program",6:"Action program",7:"Portrait mode",8:"Landscape mode"},MeteringMode:{0:"Unknown",1:"Average",2:"CenterWeightedAverage",3:"Spot",4:"MultiSpot",5:"Pattern",6:"Partial",255:"Other"},LightSource:{0:"Unknown",1:"Daylight",2:"Fluorescent",3:"Tungsten (incandescent light)",4:"Flash",9:"Fine weather",10:"Cloudy weather",11:"Shade",12:"Daylight fluorescent (D 5700 - 7100K)",13:"Day white fluorescent (N 4600 - 5400K)",14:"Cool white fluorescent (W 3900 - 4500K)",15:"White fluorescent (WW 3200 - 3700K)",17:"Standard light A",18:"Standard light B",19:"Standard light C",20:"D55",21:"D65",22:"D75",23:"D50",24:"ISO studio tungsten",255:"Other"},Flash:{0:"Flash did not fire",1:"Flash fired",5:"Strobe return light not detected",7:"Strobe return light detected",9:"Flash fired, compulsory flash mode",13:"Flash fired, compulsory flash mode, return light not detected",15:"Flash fired, compulsory flash mode, return light detected",16:"Flash did not fire, compulsory flash mode",24:"Flash did not fire, auto mode",25:"Flash fired, auto mode",29:"Flash fired, auto mode, return light not detected",31:"Flash fired, auto mode, return light detected",32:"No flash function",65:"Flash fired, red-eye reduction mode",69:"Flash fired, red-eye reduction mode, return light not detected",71:"Flash fired, red-eye reduction mode, return light detected",73:"Flash fired, compulsory flash mode, red-eye reduction mode",77:"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected",79:"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected",89:"Flash fired, auto mode, red-eye reduction mode",93:"Flash fired, auto mode, return light not detected, red-eye reduction mode",95:"Flash fired, auto mode, return light detected, red-eye reduction mode"},SensingMethod:{1:"Not defined",2:"One-chip color area sensor",3:"Two-chip color area sensor",4:"Three-chip color area sensor",5:"Color sequential area sensor",7:"Trilinear sensor",8:"Color sequential linear sensor"},SceneCaptureType:{0:"Standard",1:"Landscape",2:"Portrait",3:"Night scene"},SceneType:{1:"Directly photographed"},CustomRendered:{0:"Normal process",1:"Custom process"},WhiteBalance:{0:"Auto white balance",1:"Manual white balance"},GainControl:{0:"None",1:"Low gain up",2:"High gain up",3:"Low gain down",4:"High gain down"},Contrast:{0:"Normal",1:"Soft",2:"Hard"},Saturation:{0:"Normal",1:"Low saturation",2:"High saturation"},Sharpness:{0:"Normal",1:"Soft",2:"Hard"},SubjectDistanceRange:{0:"Unknown",1:"Macro",2:"Close view",3:"Distant view"},FileSource:{3:"DSC"},Components:{0:"",1:"Y",2:"Cb",3:"Cr",4:"R",5:"G",6:"B"}};function addEvent(element,event,handler){if(element.addEventListener){element.addEventListener(event,handler,false)}else if(element.attachEvent){element.attachEvent("on"+event,handler)}}function imageHasData(img){return!!img.exifdata}function getImageData(img,callback){BinaryAjax(img.src,function(http){var data=findEXIFinJPEG(http.binaryResponse);img.exifdata=data||{};if(callback){callback.call(img)}})}function findEXIFinJPEG(file){if(file.getByteAt(0)!=255||file.getByteAt(1)!=216){return false}var offset=2,length=file.getLength(),marker;while(offset<length){if(file.getByteAt(offset)!=255){if(debug)console.log("Not a valid marker at offset "+offset+", found: "+file.getByteAt(offset));return false}marker=file.getByteAt(offset+1);if(marker==22400){if(debug)console.log("Found 0xFFE1 marker");return readEXIFData(file,offset+4,file.getShortAt(offset+2,true)-2)}else if(marker==225){if(debug)console.log("Found 0xFFE1 marker");return readEXIFData(file,offset+4,file.getShortAt(offset+2,true)-2)}else{offset+=2+file.getShortAt(offset+2,true)}}}function readTags(file,tiffStart,dirStart,strings,bigEnd){var entries=file.getShortAt(dirStart,bigEnd),tags={},entryOffset,tag,i;for(i=0;i<entries;i++){entryOffset=dirStart+i*12+2;tag=strings[file.getShortAt(entryOffset,bigEnd)];if(!tag&&debug)console.log("Unknown tag: "+file.getShortAt(entryOffset,bigEnd));tags[tag]=readTagValue(file,entryOffset,tiffStart,dirStart,bigEnd)}return tags}function readTagValue(file,entryOffset,tiffStart,dirStart,bigEnd){var type=file.getShortAt(entryOffset+2,bigEnd),numValues=file.getLongAt(entryOffset+4,bigEnd),valueOffset=file.getLongAt(entryOffset+8,bigEnd)+tiffStart,offset,vals,val,n,numerator,denominator;switch(type){case 1:case 7:if(numValues==1){return file.getByteAt(entryOffset+8,bigEnd)}else{offset=numValues>4?valueOffset:entryOffset+8;vals=[];for(n=0;n<numValues;n++){vals[n]=file.getByteAt(offset+n)}return vals}case 2:offset=numValues>4?valueOffset:entryOffset+8;return file.getStringAt(offset,numValues-1);case 3:if(numValues==1){return file.getShortAt(entryOffset+8,bigEnd)}else{offset=numValues>2?valueOffset:entryOffset+8;vals=[];for(n=0;n<numValues;n++){vals[n]=file.getShortAt(offset+2*n,bigEnd)}return vals}case 4:if(numValues==1){return file.getLongAt(entryOffset+8,bigEnd)}else{vals=[];for(var n=0;n<numValues;n++){vals[n]=file.getLongAt(valueOffset+4*n,bigEnd)}return vals}case 5:if(numValues==1){numerator=file.getLongAt(valueOffset,bigEnd);denominator=file.getLongAt(valueOffset+4,bigEnd);val=new Number(numerator/denominator);val.numerator=numerator;val.denominator=denominator;return val}else{vals=[];for(n=0;n<numValues;n++){numerator=file.getLongAt(valueOffset+8*n,bigEnd);denominator=file.getLongAt(valueOffset+4+8*n,bigEnd);vals[n]=new Number(numerator/denominator);vals[n].numerator=numerator;vals[n].denominator=denominator}return vals}case 9:if(numValues==1){return file.getSLongAt(entryOffset+8,bigEnd)}else{vals=[];for(n=0;n<numValues;n++){vals[n]=file.getSLongAt(valueOffset+4*n,bigEnd)}return vals}case 10:if(numValues==1){return file.getSLongAt(valueOffset,bigEnd)/file.getSLongAt(valueOffset+4,bigEnd)}else{vals=[];for(n=0;n<numValues;n++){vals[n]=file.getSLongAt(valueOffset+8*n,bigEnd)/file.getSLongAt(valueOffset+4+8*n,bigEnd)}return vals}}}function readEXIFData(file,start){if(file.getStringAt(start,4)!="Exif"){if(debug)console.log("Not valid EXIF data! "+file.getStringAt(start,4));return false}var bigEnd,tags,tag,exifData,gpsData,tiffOffset=start+6;if(file.getShortAt(tiffOffset)==18761){bigEnd=false}else if(file.getShortAt(tiffOffset)==19789){bigEnd=true}else{if(debug)console.log("Not valid TIFF data! (no 0x4949 or 0x4D4D)");return false}if(file.getShortAt(tiffOffset+2,bigEnd)!=42){if(debug)console.log("Not valid TIFF data! (no 0x002A)");return false}if(file.getLongAt(tiffOffset+4,bigEnd)!=8){if(debug)console.log("Not valid TIFF data! (First offset not 8)",file.getShortAt(tiffOffset+4,bigEnd));return false}tags=readTags(file,tiffOffset,tiffOffset+8,TiffTags,bigEnd);if(tags.ExifIFDPointer){exifData=readTags(file,tiffOffset,tiffOffset+tags.ExifIFDPointer,ExifTags,bigEnd);for(tag in exifData){switch(tag){case"LightSource":case"Flash":case"MeteringMode":case"ExposureProgram":case"SensingMethod":case"SceneCaptureType":case"SceneType":case"CustomRendered":case"WhiteBalance":case"GainControl":case"Contrast":case"Saturation":case"Sharpness":case"SubjectDistanceRange":case"FileSource":exifData[tag]=StringValues[tag][exifData[tag]];break;case"ExifVersion":case"FlashpixVersion":exifData[tag]=String.fromCharCode(exifData[tag][0],exifData[tag][1],exifData[tag][2],exifData[tag][3]);break;case"ComponentsConfiguration":exifData[tag]=StringValues.Components[exifData[tag][0]]+StringValues.Components[exifData[tag][1]]+StringValues.Components[exifData[tag][2]]+StringValues.Components[exifData[tag][3]];break}tags[tag]=exifData[tag]}}if(tags.GPSInfoIFDPointer){gpsData=readTags(file,tiffOffset,tiffOffset+tags.GPSInfoIFDPointer,GPSTags,bigEnd);for(tag in gpsData){switch(tag){case"GPSVersionID":gpsData[tag]=gpsData[tag][0]+"."+gpsData[tag][1]+"."+gpsData[tag][2]+"."+gpsData[tag][3];break}tags[tag]=gpsData[tag]}}return tags}function getData(img,callback){if(!img.complete)return false;if(!imageHasData(img)){getImageData(img,callback)}else{if(callback){callback.call(img)}}return true}function getTag(img,tag){if(!imageHasData(img))return;return img.exifdata[tag]}function getAllTags(img){if(!imageHasData(img))return{};var a,data=img.exifdata,tags={};for(a in data){if(data.hasOwnProperty(a)){tags[a]=data[a]}}return tags}function pretty(img){if(!imageHasData(img))return"";var a,data=img.exifdata,strPretty="";for(a in data){if(data.hasOwnProperty(a)){if(typeof data[a]=="object"){if(data[a]instanceof Number){strPretty+=a+" : "+data[a]+" ["+data[a].numerator+"/"+data[a].denominator+"]\r\n"}else{strPretty+=a+" : ["+data[a].length+" values]\r\n"}}else{strPretty+=a+" : "+data[a]+"\r\n"}}}return strPretty}function readFromBinaryFile(file){return findEXIFinJPEG(file)}return{readFromBinaryFile:readFromBinaryFile,pretty:pretty,getTag:getTag,getAllTags:getAllTags,getData:getData,Tags:ExifTags,TiffTags:TiffTags,GPSTags:GPSTags,StringValues:StringValues}}();angular.module("testApp").directive("imageCrop",function(){return{template:'<div class="ng-image-crop ng-image-crop--{{ shape }}" ng-style="moduleStyles"><section ng-style="sectionStyles" ng-show="step==1"></section><section ng-style="sectionStyles" ng-show="step==2"><canvas class="cropping-canvas" id="canvas-{{imageCropId}}" width="{{ canvasWidth }}" height="{{ canvasHeight }}" ng-mousemove="onCanvasMouseMove($event)" ng-mousedown="onCanvasMouseDown($event)" ng-mouseup="onCanvasMouseUp($event)"></canvas><div class="zoom-handle" ng-mousemove="onHandleMouseMove($event)" ng-mousedown="onHandleMouseDown($event)" ng-mouseup="onHandleMouseUp($event)"><span>&larr; zoom &rarr;</span></div><button ng-click="crop()">Crop</button></section><section ng-style="sectionStyles" class="section-final" id="section-final-{{imageCropId}}" ng-show="step==3"><img class="final-cropped-image" id="final-cropped-image-{{imageCropId}}" ng-src="{{ croppedDataUri }}" /></section></div>',replace:true,restrict:"AE",scope:{width:"@",height:"@",shape:"@",result:"=",step:"=",input:"=",croppedDataUri:"="},link:function(scope,element,attributes){scope.step=scope.step||1;scope.shape=scope.shape||"circle";scope.width=parseInt(scope.width,10)||300;scope.height=parseInt(scope.height,10)||300;if(typeof imageCropId==="undefined"||imageCropId==null){scope.imageCropId=0;imageCropId=0}else{scope.imageCropId=imageCropId+1;imageCropId=imageCropId+1}scope.canvasWidth=scope.width;scope.canvasHeight=scope.height;var $input=element.find("input[type=file]");var $canvas=element.find("canvas")[0];var $handle=document.getElementsByClassName("zoom-handle")[0];var $finalImg=document.getElementsByClassName("final-cropped-image")[0];scope.$img=new Image;var fileReader=new FileReader;var maxLeft=0,minLeft=0,maxTop=0,minTop=0,imgLoaded=false,imgWidth=0,imgHeight=0;var currentX=0,currentY=0,dragging=false,startX=0,startY=0,zooming=false;var newWidth=imgWidth,newHeight=imgHeight;var targetX=0,targetY=0;var zoom=1;var maxZoomGestureLength=0;var maxZoomedInLevel=0,maxZoomedOutLevel=2;var minXPos=0,maxXPos=50,minYPos=0,maxYPos=50;var zoomWeight=.4;var ctx=$canvas.getContext("2d");var exif=null;var files=[];scope.moduleStyles={width:scope.width+"px",height:scope.height+"px"};scope.sectionStyles={width:scope.width+"px",height:scope.height+"px"};scope.croppingGuideStyles={width:scope.width+"px",height:scope.height+"px",top:"50px",left:"50px"};fileReader.onload=function(e){$img.src=this.result;scope.step=2;scope.$apply();var byteString=atob(this.result.split(",")[1]);var binary=new BinaryFile(byteString,0,byteString.length);exif=EXIF.readFromBinaryFile(binary)};scope.reset=function(){var $canvas=$("#canvas-"+scope.imageCropId)[0];var ctx=$canvas.getContext("2d");files=[];zoom=1;ctx.clearRect(0,0,$canvas.width,$canvas.height);scope.$img.src="";scope.$img.crossOrigin="anonymous"};element.on("change",function(e){files=e.target.files;fileReader.readAsDataURL(files[0])});scope.$watch("step",function(){console.log("Step change!")});scope.$watch("input",function(){scope.step=2;if(!scope.input){scope.reset();return}scope.$img.src=scope.input;scope.$img.crossOrigin="anonymous"});scope.finalImgOnLoad=function(){var tempCanvas=document.createElement("canvas");tempCanvas.id="canvas-"+scope.imageCropId;tempCanvas.width=this.width;tempCanvas.height=this.height;tempCanvas.style.display="none";var tempCanvasContext=tempCanvas.getContext("2d");tempCanvasContext.drawImage(scope.finalImg,0,0);document.getElementById("section-final-"+scope.imageCropId).appendChild(tempCanvas);scope.result=tempCanvas.toDataURL();scope.$apply();scope.reset()};scope.$img.onload=function(){console.log("scope.$img.width: "+scope.$img.width);console.log("scope.$img.height: "+scope.$img.height);if(scope.$img.width<scope.width){var oldImgWidth=scope.$img.width;scope.$img.width=scope.width;scope.$img.height=scope.$img.height*scope.$img.width/oldImgWidth;console.log("scope.$img.height now: "+scope.$img.height)}if(scope.$img.height<scope.height){var oldImgHeight=scope.$img.height;scope.$img.height=scope.height;scope.$img.width=scope.$img.width*scope.$img.height/oldImgHeight}ctx.drawImage(scope.$img,0,0);var dataURL=$canvas.toDataURL("image/png");var byteString=atob(dataURL.split(",")[1]);var binary=new BinaryFile(byteString,0,byteString.length);exif=EXIF.readFromBinaryFile(binary);imgWidth=scope.$img.width;imgHeight=scope.$img.height;if(exif&&exif.Orientation){switch(exif.Orientation){case 1:break;case 2:ctx.translate(imgWidth,0);ctx.scale(-1,1);break;case 3:ctx.translate(imgWidth,imgHeight);ctx.rotate(Math.PI);break;case 4:ctx.translate(0,imgHeight);ctx.scale(1,-1);break;case 5:ctx.rotate(.5*Math.PI);ctx.scale(1,-1);break;case 6:ctx.rotate(.5*Math.PI);ctx.translate(0,-imgHeight);break;case 7:ctx.rotate(.5*Math.PI);ctx.translate(imgWidth,-imgHeight);ctx.scale(-1,1);break;case 8:ctx.rotate(-.5*Math.PI);ctx.translate(-imgWidth,0);break;default:break}}minLeft=scope.width-this.width;minTop=scope.height-this.height;newWidth=imgWidth;newHeight=imgHeight;maxZoomedInLevel=$canvas.width/imgWidth;maxZoomGestureLength=to2Dp(Math.sqrt(Math.pow($canvas.width,2)+Math.pow($canvas.height,2)));scope.updateDragBounds();scope.finalImg=$("#final-cropped-image-"+scope.imageCropId)[0];scope.finalImg.onload=scope.finalImgOnLoad};scope.moveImage=function(x,y){if(x<minXPos||x>maxXPos||y<minYPos||y>maxYPos){return}targetX=x;targetY=y;var $canvas=$("#canvas-"+scope.imageCropId)[0];var ctx=$canvas.getContext("2d");ctx.clearRect(0,0,$canvas.width,$canvas.height);ctx.drawImage(scope.$img,x,y,newWidth,newHeight)};var to2Dp=function(val){return Math.round(val*1e3)/1e3};scope.updateDragBounds=function(){minXPos=$canvas.width-scope.$img.width*zoom-50;minYPos=$canvas.height-scope.$img.height*zoom-50};scope.zoomImage=function(val){var $canvas=$("#canvas-"+scope.imageCropId)[0];var ctx=$canvas.getContext("2d");if(!val){return}var proposedZoomLevel=to2Dp(zoom+val);if(proposedZoomLevel<maxZoomedInLevel||proposedZoomLevel>maxZoomedOutLevel){return}zoom=proposedZoomLevel;scope.updateDragBounds();if(proposedZoomLevel===maxZoomedInLevel){ctx.clearRect(0,0,$canvas.width,$canvas.height);ctx.drawImage(scope.$img,0,0,$canvas.width,$canvas.height);return}newWidth=scope.$img.width*zoom;newHeight=scope.$img.height*zoom;var newXPos=currentX*zoom;var newYPos=currentY*zoom;if(newXPos<minXPos){newXPos=minXPos}else if(newXPos>maxXPos){newXPos=maxXPos}if(newYPos<minYPos){newYPos=minYPos}else if(newYPos>maxYPos){newYPos=maxYPos}ctx.clearRect(0,0,$canvas.width,$canvas.height);ctx.drawImage(scope.$img,newXPos,newYPos,newWidth,newHeight)};function calcZoomLevel(diffX,diffY){var hyp=Math.sqrt(Math.pow(diffX,2)+Math.pow(diffY,2));var zoomGestureRatio=to2Dp(hyp/maxZoomGestureLength);var newZoomDiff=to2Dp((maxZoomedOutLevel-maxZoomedInLevel)*zoomGestureRatio*zoomWeight);return diffX>0?-newZoomDiff:newZoomDiff}scope.crop=function(){scope.croppedDataUri=$canvas.toDataURL();scope.step=3};scope.onCanvasMouseUp=function(e){if(!dragging){return}e.preventDefault();e.stopPropagation();startX=0;startY=0;dragging=false;currentX=targetX;currentY=targetY;removeBodyEventListener("mouseup",scope.onCanvasMouseUp);removeBodyEventListener("touchend",scope.onCanvasMouseUp);removeBodyEventListener("mousemove",scope.onCanvasMouseMove);removeBodyEventListener("touchmove",scope.onCanvasMouseMove)};$canvas.addEventListener("touchend",scope.onCanvasMouseUp,false);scope.onCanvasMouseDown=function(e){startX=e.type==="touchstart"?e.changedTouches[0].clientX:e.clientX;startY=e.type==="touchstart"?e.changedTouches[0].clientY:e.clientY;zooming=false;dragging=true;addBodyEventListener("mouseup",scope.onCanvasMouseUp);addBodyEventListener("mousemove",scope.onCanvasMouseMove)};$canvas.addEventListener("touchstart",scope.onCanvasMouseDown,false);function addBodyEventListener(eventName,func){document.documentElement.addEventListener(eventName,func,false)}function removeBodyEventListener(eventName,func){document.documentElement.removeEventListener(eventName,func)}scope.onHandleMouseDown=function(e){e.preventDefault();e.stopPropagation();startX=lastHandleX=e.type==="touchstart"?e.changedTouches[0].clientX:e.clientX;startY=lastHandleY=e.type==="touchstart"?e.changedTouches[0].clientY:e.clientY;dragging=false;zooming=true;addBodyEventListener("mouseup",scope.onHandleMouseUp);addBodyEventListener("touchend",scope.onHandleMouseUp);addBodyEventListener("mousemove",scope.onHandleMouseMove);addBodyEventListener("touchmove",scope.onHandleMouseMove)};$handle.addEventListener("touchstart",scope.onHandleMouseDown,false);scope.onHandleMouseUp=function(e){if(!zooming){return}e.preventDefault();e.stopPropagation();startX=0;startY=0;zooming=false;currentX=targetX;currentY=targetY;removeBodyEventListener("mouseup",scope.onHandleMouseUp);removeBodyEventListener("touchend",scope.onHandleMouseUp);removeBodyEventListener("mousemove",scope.onHandleMouseMove);removeBodyEventListener("touchmove",scope.onHandleMouseMove)};$handle.addEventListener("touchend",scope.onHandleMouseUp,false);scope.onCanvasMouseMove=function(e){e.preventDefault();e.stopPropagation();if(!dragging){return}var diffX=startX-(e.type==="touchmove"?e.changedTouches[0].clientX:e.clientX);var diffY=startY-(e.type==="touchmove"?e.changedTouches[0].clientY:e.clientY);scope.moveImage(currentX-diffX,currentY-diffY)};$canvas.addEventListener("touchmove",scope.onCanvasMouseMove,false);var lastHandleX=null,lastHandleY=null;scope.onHandleMouseMove=function(e){e.stopPropagation();e.preventDefault();if(!zooming){return false}var diffX=lastHandleX-(e.type==="touchmove"?e.changedTouches[0].clientX:e.clientX);var diffY=lastHandleY-(e.type==="touchmove"?e.changedTouches[0].clientY:e.clientY);lastHandleX=e.type==="touchmove"?e.changedTouches[0].clientX:e.clientX;lastHandleY=e.type==="touchmove"?e.changedTouches[0].clientY:e.clientY;var zoomVal=calcZoomLevel(diffX,diffY);scope.zoomImage(zoomVal)};$handle.addEventListener("touchmove",scope.onHandleMouseMove,false)}}})})();